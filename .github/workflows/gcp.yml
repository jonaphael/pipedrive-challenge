name: Build and Push Image to GCP (Google Cloud Platform)

on:
  push:
    branches: [main]

env:
  APP_PORT: ${{ secrets.APP_PORT }}
  APP_INTERVAL_SEC: ${{ secrets.APP_INTERVAL_SEC }} 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PIPEDRIVE_TOKEN: ${{ secrets.PIPEDRIVE_TOKEN }}
  MONGO_URL: ${{ secrets.MONGO_URL }}

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: pipedrive-challenge
      PROJECT_ID: jaristil-pipedrive-challenge
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        export_default_credentials: true
    
    - name: Build the docker Image
      run: |-
        docker build -t $IMAGE_NAME:latest .
    
    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker europe-north1-docker.pkg.dev --quiet

    - name: Push the Docker Image to GCR (Google Container Registry)
      env:
        GIT_TAG: v0.1.0
      run: |-
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
        docker push  gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

    - name: Push the Docker Image to Artifact Registry
      env:
        GIT_TAG: v0.1.0
      run: |-
        docker tag $IMAGE_NAME:latest europe-north1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker tag $IMAGE_NAME:latest europe-north1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
        docker push  europe-north1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:latest
        docker push europe-north1-docker.pkg.dev/$PROJECT_ID/images/$IMAGE_NAME:$GIT_TAG
    
    - name: Deploy
      run: |
          gcloud run deploy pipedrive-challenge \
          --region europe-north1 \
          --image gcr.io/$PROJECT_ID/$IMAGE_NAME:latest \
          --platform managed \
          --allow-unauthenticated \
          --project $PROJECT_ID \
          --port=$APP_PORT
